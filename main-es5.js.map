{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/editlist/editlist.component.ts","webpack:///src/app/editlist/editlist.component.html","webpack:///src/app/grocerylist/grocerylist.component.ts","webpack:///src/app/grocerylist/grocerylist.component.html","webpack:///src/app/listing-data-form/listing-data-form.component.ts","webpack:///src/app/listing-data-form/listing-data-form.component.html","webpack:///src/app/mylist.service.ts","webpack:///src/app/nav-bar/nav-bar.component.ts","webpack:///src/app/newlist/newlist.component.ts","webpack:///src/app/newlist/newlist.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","EditlistComponent","route","router","mylistService","ngOnInit","snapshot","paramMap","get","getListingById","subscribe","Mylist","onSubmit","name","quantity","price","editList","navigateByUrl","GrocerylistComponent","MylistService","getListing","onDeleteClicked","listingId","deleteMylist","filter","ListingDataFormComponent","currentName","currentQuantity","currentPrice","currentViews","views","onButtonClicked","emit","Number","httpOptions","headers","http","newList","post","providedIn","NavBarComponent","NewlistComponent","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAC,EAAP;AAAWC,gBAAU,EAAE,SAAvB;AAAkCC,eAAS,EAAC;AAA5C,KADqB,EAErB;AAAEF,UAAI,EAAC,QAAP;AAAiBG,eAAS,EAAE,uFAA5B;AAAkDD,eAAS,EAAC;AAA5D,KAFqB,EAIrB;AAAEF,UAAI,EAAC,cAAP;AAAuBG,eAAS,EAAE;AAAlC,KAJqB,EAKrB;AAAEH,UAAI,EAAC,SAAP;AAAkBG,eAAS,EAAE;AAA7B,KALqB,CAAvB;;QAaaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBN,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACpB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaU,Y,6BALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,aAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,sF;AAAA;AAAA;ACPzB;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;;;;;;;;sEDAaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAgCaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBANJ,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,qEAJO,CAMI;;;;0HAGFA,S,EAAS;AAAA,uBAhBlB,2DAgBkB,EAflB,uFAekB,EAdlB,8EAckB,EAblB,2EAakB,EAZlB,uGAYkB,EAXlB,2EAWkB;AAXH,kBAGf,uEAHe,EAIf,oEAJe,EAKf,0DALe,EAMf,qEANe;AAWG,O;AALF,K;;;;;sEAKPA,S,EAAS;cAlBrB,sDAkBqB;eAlBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,uFAFY,EAGZ,8EAHY,EAIZ,2EAJY,EAKZ,uGALY,EAMZ,2EANY,CADN;AASRP,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,qEAJO,CATD;AAeRQ,mBAAS,EAAE,EAfH;AAgBRC,mBAAS,EAAE,CAAC,2DAAD;AAhBH,S;AAkBY,Q;;;;;;;;;;;;;;;;;;AChCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AACI;;AAA8B;;AAAS;;AACvC;;AAKA;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAClC;;;;;;AAJI;;AAAA,oGAA2B,iBAA3B,EAA2B,sBAA3B,EAA2B,cAA3B,EAA2B,mBAA3B;;;;;;AAKJ;;;;QDCaC,iB;AAIX,iCACUC,KADV,EAEUC,MAFV,EAGUC,aAHV,EAGsC;AAAA;;AAF5B,aAAAF,KAAA,GAAAA,KAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACL;;;;eAEL,SAAAC,QAAQ;AAAA;;AACN,cAAMtB,EAAE,GAAG,KAAKmB,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAX;AACA,eAAKJ,aAAL,CAAmBK,cAAnB,CAAkC1B,EAAlC,EACC2B,SADD,CACW,UAAAC,MAAM;AAAA,mBAAI,KAAI,CAACA,MAAL,GAAaA,MAAjB;AAAA,WADjB;AAED;;;eAED,SAAAC,QAAQ,OAAyB;AAAA;;AAAA,cAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,cAAhBC,QAAgB,QAAhBA,QAAgB;AAAA,cAANC,KAAM,QAANA,KAAM;AAE/B,eAAKX,aAAL,CAAmBY,QAAnB,CAA4B,KAAKL,MAAL,CAAY5B,EAAxC,EAA4C8B,IAA5C,EAAkDC,QAAlD,EAA4DC,KAA5D,EACCL,SADD,CACW,YAAK;AAEd,kBAAI,CAACP,MAAL,CAAYc,aAAZ,CAA0B,SAA1B;AACD,WAJD;AAMD;;;;;uBAxBUhB,iB,EAAiB,+H,EAAA,uH,EAAA,8H;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA,8M;AAAA;AAAA;ACV9B;;AASA;;;;AATmC;;AASA;;AAAA;;;;;;;;;sEDCtBA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTP,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACsBY;;AACI;;AACI;;AAAQ;;AAAgB;;AAAU;;AACtC;;AACA;;AACI;;AACI;;AAAQ;;AAAI;;AAChB;;AACA;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAsC;;AAAM;;AACxD;;AACJ;;;;;;AARgB;;AAAA;;AAA0B;;AAAA;;AAG/B;;AAAA;;;;QDjBVsB,oB;AAKX,oCACUC,aADV,EACsC;AAAA;;AAA5B,aAAAA,aAAA,GAAAA,aAAA;AAFV,aAAAR,MAAA,GAAiB,EAAjB;AAGK,O,CAEL;;;;;eAEA,SAAAN,QAAQ;AAAA;;AACP,eAAKc,aAAL,CAAmBC,UAAnB,GAAiC;AAAjC,WACCV,SADD,CACW,UAAAC,MAAM;AAAA,mBAAG,MAAI,CAACA,MAAL,GAAaA,MAAhB;AAAA,WADjB,EADO,CAEmC;AAC1C,S,CAGH;;;;eACE,SAAAU,eAAe,CAACC,SAAD,EAAiB;AAAA;;AAC9B,eAAKH,aAAL,CAAmBI,YAAnB,CAAgCD,SAAhC,EACCZ,SADD,CACW,YAAK;AACd,kBAAI,CAACC,MAAL,GAAa,MAAI,CAACA,MAAL,CAAYa,MAAZ,CACX,UAAAb,MAAM;AAAA,qBAAEA,MAAM,CAAC5B,EAAP,KAAcuC,SAAhB;AAAA,aADK,CAAb;AAGD,WALD;AAMD;;;;;uBAzBUJ,oB,EAAoB,8H;AAAA,K;;;YAApBA,oB;AAAoB,sC;AAAA,e;AAAA,a;AAAA,mT;AAAA;AAAA;ACVjC;;AACI;;AAEI;;AACI;;AACI;;AAAsB;;AAAkB;;AACxC;;AACR;;AAEA;;AACI;;AACI;;AAA8B;;AAAQ;;AAC1C;;AACJ;;AAEA;;AACI;;AACI;;AACA;;AACR;;AAEA;;AACI;;AAWJ;;AAGJ;;AACJ;;;;AAfqC;;AAAA;;;;;;;;;sEDZxBA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTxB,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;AEVjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa6B,wB;AAgBX,wCACUtB,MADV,EACwB;AAAA;;AAAd,aAAAA,MAAA,GAAAA,MAAA;AAdD,aAAAuB,WAAA,GAAa,EAAb;AACA,aAAAC,eAAA,GAAkB,EAAlB;AACA,aAAAC,YAAA,GAAe,EAAf;AACA,aAAAC,YAAA,GAAc,EAAd;AAGT,aAAAhB,IAAA,GAAc,EAAd;AACA,aAAAC,QAAA,GAAkB,EAAlB;AACA,aAAAC,KAAA,GAAe,EAAf;AACA,aAAAe,KAAA,GAAc,EAAd;AAEU,aAAAlB,QAAA,GAAW,IAAI,0DAAJ,EAAX;AAIL;;;;eAEL,SAAAP,QAAQ;AAEN,eAAKQ,IAAL,GAAY,KAAKa,WAAjB;AACA,eAAKZ,QAAL,GAAgB,KAAKa,eAArB;AACA,eAAKZ,KAAL,GAAa,KAAKa,YAAlB;AACA,eAAKE,KAAL,GAAY,KAAKD,YAAjB;AACD;;;eAED,SAAAE,eAAe;AAEb,eAAKnB,QAAL,CAAcoB,IAAd,CAAmB;AACjBjD,cAAE,EAAC,IADc;AAEjB8B,gBAAI,EAAE,KAAKA,IAFM;AAGjBC,oBAAQ,EAAE,KAAKA,QAHE;AAIjBC,iBAAK,EAAEkB,MAAM,CAAC,KAAKlB,KAAN,CAJI;AAKjBe,iBAAK,EAAE;AALU,WAAnB;AAQD;;;;;uBAtCUL,wB,EAAwB,uH;AAAA,K;;;YAAxBA,wB;AAAwB,4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,uZ;AAAA;AAAA;ACRrC;;AAGI;;AAA+B;AAAA,mBAAY,IAAAM,eAAA,EAAZ;AAA6B,WAA7B;;AAC/B;;AACI;;AAAkB;;AAAK;;AACvB;;AAAyC;AAAA;AAAA;;AAAzC;;AACJ;;AAEA;;AACI;;AAAsB;;AAAc;;AACpC;;AAAiD;AAAA;AAAA;;AAAjD;;AACJ;;AAEA;;AACI;;AAAmB;;AAAM;;AACzB;;AAA2C;AAAA;AAAA;;AAA3C;;AACJ;;AAEA;;AAAsB;;AAAc;;AACpC;;AAGJ;;;;AAjBiD;;AAAA;;AAKQ;;AAAA;;AAKN;;AAAA;;AAGzB;;AAAA;;;;;;;;;sEDXbN,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACT/B,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK0B,Q;;;;;;gBAElC;;;gBACA;;;gBACA;;;gBACA;;;gBACA;;;gBAQA;;;;;;;;;;;;;;;;;;;;AEtBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAMsC,WAAW,GAAC;AAChBC,aAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,wBAAgB;AADO,OAAhB;AADO,KAAlB;;QASahB,a;AAEX,6BACUiB,IADV,EAC0B;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AACL;;;;eAEL,SAAAhB,UAAU;AACR,iBAAO,KAAKgB,IAAL,CAAU5B,GAAV,CAAyB,aAAzB,CAAP,CADQ,CACwC;AACjD;;;eAED,SAAAC,cAAc,CAAC1B,EAAD,EAAU;AACtB,iBAAO,KAAKqD,IAAL,CAAU5B,GAAV,uBAAsCzB,EAAtC,EAAP;AACD,S,CACD;;;;eAEA,SAAAwC,YAAY,CAACxC,EAAD,EAAU;AACpB,iBAAO,KAAKqD,IAAL,iCAAgCrD,EAAhC,EAAP;AAAgD;;;eAIlD,SAAAsD,OAAO,CAACxB,IAAD,EAAeC,QAAf,EAAgCC,KAAhC,EAA6C;AAEhD,iBAAO,KAAKqB,IAAL,CAAUE,IAAV,CACL,aADK,EAEL;AAAEzB,gBAAI,EAAJA,IAAF;AAAQC,oBAAQ,EAARA,QAAR;AAAkBC,iBAAK,EAALA;AAAlB,WAFK,EAGLmB,WAHK,CAAP;AAKD;;;eAED,SAAAlB,QAAQ,CAACjC,EAAD,EAAa8B,IAAb,EAA2BC,QAA3B,EAA4CC,KAA5C,EAAyD;AAE/D,iBAAO,KAAKqB,IAAL,CAAUE,IAAV,uBACUvD,EADV,GAEL;AAAE8B,gBAAI,EAAJA,IAAF;AAAQC,oBAAQ,EAARA,QAAR;AAAkBC,iBAAK,EAALA;AAAlB,WAFK,EAGLmB,WAHK,CAAP;AAKD;;;;;uBApCQf,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACVoB,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;ACf1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,e;AAEX,iCAAc;AAAA;AAAG;;;;eAEjB,SAAAnC,QAAQ,IACP;;;;;uBALUmC,e;AAAe,K;;;YAAfA,e;AAAe,kC;AAAA,c;AAAA,a;AAAA,6D;AAAA;;;;;sEAAfA,e,EAAe;cAL3B,uDAK2B;eALjB;AACT9C,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;ACP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWa6C,gB;AAIX,gCACUtC,MADV,EAEUC,aAFV,EAEsC;AAAA;;AAD5B,aAAAD,MAAA,GAAAA,MAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACL;;;;eAEL,SAAAC,QAAQ,IACP;;;eAED,SAAAO,QAAQ,QAAyB;AAAA;;AAAA,cAAtBC,IAAsB,SAAtBA,IAAsB;AAAA,cAAhBC,QAAgB,SAAhBA,QAAgB;AAAA,cAANC,KAAM,SAANA,KAAM;AAE/B,eAAKX,aAAL,CAAmBiC,OAAnB,CAA2BxB,IAA3B,EAAiCC,QAAjC,EAA2CC,KAA3C,EACCL,SADD,CACW,YAAI;AACb,kBAAI,CAACP,MAAL,CAAYc,aAAZ,CAA0B,SAA1B;AACD,WAHD;AAKD;;;;;uBAnBUwB,gB,EAAgB,uH,EAAA,8H;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA,+G;AAAA;AAAA;ACX7B;;AAGI;;AAA8B;;AAAW;;AAEzC;;AAEA;AAAA,mBAAY,IAAA7B,QAAA,QAAZ;AAA4B,WAA5B;;AAA8B;;AAGlC;;;;;;;;;sEDCa6B,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT/C,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX7B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM8C,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GrocerylistComponent } from './grocerylist/grocerylist.component';\nimport { EditlistComponent } from './editlist/editlist.component';\nimport { NewlistComponent } from './newlist/newlist.component';\n\n\nconst routes: Routes = [\n  { path:'', redirectTo: '/Mylist', pathMatch:'full' },\n  { path:'Mylist', component: GrocerylistComponent, pathMatch:'full' },\n\n  { path:'Editlist/:id', component: EditlistComponent },\n  { path:'Newlist', component: NewlistComponent },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'grocerylist';\n}\n","<div id=\"page-wrap\">\n    <div id=\"max-width-colum\">\n        <app-nav-bar></app-nav-bar>\n        <div id=\"content-wrap\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { HttpClientModule} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GrocerylistComponent } from './grocerylist/grocerylist.component';\nimport { EditlistComponent } from './editlist/editlist.component';\nimport { NewlistComponent } from './newlist/newlist.component';\nimport { ListingDataFormComponent } from './listing-data-form/listing-data-form.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GrocerylistComponent,\n    EditlistComponent,\n    NewlistComponent,\n    ListingDataFormComponent,\n    NavBarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MylistService } from '../mylist.service';\nimport { Listing } from '../types';\nimport { fakeListings } from '../fake-data';\n@Component({\n  selector: 'app-editlist',\n  templateUrl: './editlist.component.html',\n  styleUrls: ['./editlist.component.css']\n})\nexport class EditlistComponent implements OnInit {\n\n  Mylist: Listing;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private mylistService: MylistService,\n  ) { }\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.mylistService.getListingById(id)\n    .subscribe(Mylist => this.Mylist= Mylist);\n  }\n\n  onSubmit({ name, quantity, price}): void{\n\n    this.mylistService.editList(this.Mylist.id, name, quantity, price)\n    .subscribe(()=> {\n\n      this.router.navigateByUrl('/Mylist');\n    });\n\n  }\n}\n","<div class=\"create-list-container\" *ngIf=\"Mylist\">\n    <h2 class=\"create-list-title\">Edit List</h2> <!-- Title on top -->\n    <app-listing-data-form \n    buttonText=\"Save\" \n    [currentName]=\"Mylist.name\"\n    [currentQuantity]=\"Mylist.quantity\"\n    [currentPrice]=\"Mylist.price\"\n    (onSubmit)=\"onSubmit($event)\"></app-listing-data-form>\n</div>\n<div class=\"create-list-container\" *ngIf=\"!Mylist\">\n    \n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Listing } from '../types';\nimport { MylistService } from '../mylist.service';\n\n\n@Component({\n  selector: 'app-grocerylist',\n  templateUrl: './grocerylist.component.html',\n  styleUrls: ['./grocerylist.component.css']\n})\nexport class GrocerylistComponent implements OnInit {\n\n  \n\n  Mylist:Listing[]=[];\n  constructor(\n    private MylistService: MylistService,\n  ) { }\n\n  //getListing mehtod is returing an observable \n\n  ngOnInit(): void {\n   this.MylistService.getListing()  //calls to retuen some data\n   .subscribe(Mylist=> this.Mylist= Mylist); //call back func that get called getListing Observable produces an event\n  }\n  \n\n// deleting method\n  onDeleteClicked(listingId:string): void{\n    this.MylistService.deleteMylist(listingId)\n    .subscribe(()=> {\n      this.Mylist= this.Mylist.filter(\n        Mylist=>Mylist.id !== listingId\n      );\n    })\n  }\n\n}\n","<div id=\"page-wrap\">\n    <div id=\"max-width-column\">\n\n        <div id=\"top-bar\">\n            <a routerLink=\"/Newlist\">\n                <h1 id=\"app-heading\"> Daily Grocery List</h1>\n                </a>\n        </div>\n\n        <div id=\"top-bar\">\n            <a routerLink=\"/Newlist\">\n                <button class=\"create-button\">New List</button>\n            </a>\n        </div>\n\n        <div id=\"top-bar\">\n            <a routerLink=\"/Newlist\">\n                <h3 id=\"app-heading\"> </h3>\n                </a>\n        </div>\n\n        <div id=\"content-wrap\">\n            <div class=\"content-box\" *ngFor=\"let listing of Mylist\">\n                <div>\n                    <strong>{{listing.name}}</strong> - {{listing.quantity}} - Tk {{listing.price}}.\n                </div>\n                <div class=\"buttons-container\">\n                    <a routerLink=\"/Editlist/{{listing.id}}\">  \n                        <button>Edit</button>\n                    </a>\n                    <button (click)=\"onDeleteClicked(listing.id)\">Delete</button>\n                </div>\n            </div>\n        </div>\n\n\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Listing } from '../types';\n@Component({\n  selector: 'app-listing-data-form',\n  templateUrl: './listing-data-form.component.html',\n  styleUrls: ['./listing-data-form.component.css']\n})\nexport class ListingDataFormComponent implements OnInit {\n\n  @Input() buttonText;\n  @Input() currentName ='';\n  @Input() currentQuantity = '';\n  @Input() currentPrice = '';\n  @Input() currentViews ='';\n \n\n  name: string ='';\n  quantity: string ='';\n  price: string ='';\n  views: string='';\n\n  @Output() onSubmit = new EventEmitter<Listing>();\n\n  constructor(\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n\n    this.name = this.currentName;\n    this.quantity = this.currentQuantity;\n    this.price = this.currentPrice;\n    this.views= this.currentViews;\n  }\n\n  onButtonClicked(): void {\n\n    this.onSubmit.emit({\n      id:null,\n      name: this.name,\n      quantity: this.quantity,\n      price: Number(this.price),\n      views: 0,\n    })\n    \n  }\n\n}\n","<div class=\"create-list-container\">\n    \n\n    <form class=\"create-list-form\" (ngSubmit)=\"onButtonClicked()\">\n    <div>\n        <label for=\"name\">Name:</label>\n        <input id=\"name\" name=\"name\" type=\"text\" [(ngModel)]=\"name\" />\n    </div>\n\n    <div>\n        <label for=\"quantity\">Item quantity:</label>\n        <input id=\"quantity\" name=\"quantity\" type=\"text\" [(ngModel)]=\"quantity\" />\n    </div>\n\n    <div>\n        <label for=\"price\">Price:</label>\n        <input id=\"price\" name=\"price\" type=\"text\" [(ngModel)]=\"price\" />\n    </div>\n\n    <button type=\"submit\">{{buttonText}}</button>\n    </form>\n\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { Listing } from './types';\n\nconst httpOptions={\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MylistService {\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  getListing(): Observable<Listing[]> {\n    return this.http.get<Listing[]>('/api/Mylist'); //making request to our server\n  }\n\n  getListingById(id:string): Observable<Listing>{\n    return this.http.get<Listing>(`/api/Mylist/${id}`);\n  }\n  // method\n\n  deleteMylist(id:string): Observable<any>{\n    return this.http.delete(`/api/Mylist/${id}`);  } \n\n\n\n  newList(name: string, quantity:string, price: number): Observable<Listing> {\n\n      return this.http.post<Listing>(\n        '/api/Mylist',\n        { name, quantity, price},\n        httpOptions,\n      );\n    }\n\n    editList(id: string, name: string, quantity:string, price: number): Observable<Listing>{\n\n      return this.http.post<Listing>(\n        `/api/Mylist/${id}`,\n        { name, quantity, price},\n        httpOptions,\n      );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MylistService } from '../mylist.service';\n\n\n\n@Component({\n  selector: 'app-newlist',\n  templateUrl: './newlist.component.html',\n  styleUrls: ['./newlist.component.css']\n})\nexport class NewlistComponent implements OnInit {\n\n\n\n  constructor(\n    private router: Router,\n    private mylistService: MylistService,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit({ name, quantity, price}): void {\n\n    this.mylistService.newList(name, quantity, price)\n    .subscribe(()=>{\n      this.router.navigateByUrl('/Mylist');\n    })\n\n  }\n}\n","<div class=\"create-list-container\">\n\n    \n    <h2 class=\"create-list-title\">Create List</h2> <!-- Title on top -->\n\n    <app-listing-data-form\n    buttonText=\"Create\"\n    (onSubmit)=\"onSubmit($event)\"></app-listing-data-form>\n\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}